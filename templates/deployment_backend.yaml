apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "retool.fullname" . }}
  labels:
{{- include "retool.labels" . | nindent 4 }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{- include "retool.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
{{- include "retool.selectorLabels" . | nindent 8 }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "retool.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
{{- if .Values.initContainers }}
      initContainers:
{{- range $key, $value := .Values.initContainers }}
      - name: "{{ $key }}"
{{ toYaml $value | indent 8 }}
{{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - bash
          - -c
          - chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh -t 0 {{ template "retool.postgresql.host" . }}:{{ template "retool.postgresql.port" . }}; ./docker_scripts/start_api.sh
        {{- if .Values.commandline.args }}
{{ toYaml .Values.commandline.args | indent 10 }}
        {{- end }}
        env:
          - name: CUSTOM_OAUTH2_SSO_CLIENT_ID
            value: {{ .Values.config.auth.onelogin.customOauth2SsoClientId | quote }}
          - name: CUSTOM_OAUTH2_SSO_CLIENT_SECRET
            value: {{ .Values.config.auth.onelogin.customOauth2SsoClientSecret | quote }}
          - name: CUSTOM_OAUTH2_SSO_AUTH_URL
            value: {{ .Values.config.auth.onelogin.customOauth2SsoAuthUrl | quote }}
          - name: CUSTOM_OAUTH2_SSO_TOKEN_URL
            value: { { .Values.config.auth.onelogin.customOauth2SsoTokenUrl | quote } }
          - name: TRIGGER_OAUTH_2_SSO_LOGIN_AUTOMATICALLY
            value: {{ .Values.config.auth.onelogin.triggerOauth2SsoLoginAutomatically | quote }}
          - name: TRIGGER_SAML_LOGIN_AUTOMATICALLY
            value: {{ .Values.config.auth.onelogin.triggerSamlLoginAutomatically | quote }}
          - name: NODE_ENV
            value: production
          {{- if gt (int (toString (.Values.replicaCount))) 1 }}
          - name: SERVICE_TYPE
            value: MAIN_BACKEND,DB_CONNECTOR
          {{- end }}
          - name: COOKIE_INSECURE
            value: {{ .Values.config.useInsecureCookies | quote }}
          - name: POSTGRES_HOST
            value: {{ template "retool.postgresql.host" . }}
          - name: POSTGRES_PORT
            value: {{ template "retool.postgresql.port" . }}
          - name: POSTGRES_DB
            value: {{ template "retool.postgresql.db" . }}
          {{- if not .Values.externalSecrets.enabled }}
          - name: LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "retool.fullname" . }}
                key: license-key
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "retool.fullname" . }}
                key: jwt-secret
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "retool.fullname" . }}
                key: encryption-key
          - name: POSTGRES_USER
            value: {{ template "retool.postgresql.user" . }}
          - name: POSTGRES_SSL_ENABLED
            value: {{ template "retool.postgresql.ssl_enabled" . }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
          {{- if  .Values.postgresql.enabled }}
                name: {{ template "retool.postgresql.fullname" . }}
          {{- else  }}
                name: {{ template "retool.fullname" . }}
          {{- end }}
                key: postgresql-password
          - name: CLIENT_ID
            value: {{ default "" .Values.config.auth.google.clientId }}
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "retool.fullname" . }}
                key: google-client-secret
          - name: RESTRICTED_DOMAIN
            value: {{ default "" .Values.config.auth.google.domain }}
          - name: BASE_DOMAIN
            value: {{ default "" .Values.config.baseDomain }}
          - name: GITHUB_APP_ID
            value: {{ .Values.config.githubAppId | default "" | quote }}
          - name: GITHUB_APP_INSTALLATION_ID
            value: {{ .Values.config.githubAppInstallationId | default "" | quote }}
          - name: GITHUB_APP_PRIVATE_KEY
            value: {{ .Values.config.githubAppPrivateKey | default "" | quote }}
          - name: VERSION_CONTROL_LOCKED
            value: {{ .Values.config.versionControlLocked | default "" | quote }}
          {{- end }}
          {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        {{- if .Values.externalSecrets.enabled }}
        envFrom:
        - secretRef:
            name: {{ .Values.externalSecrets.name }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: {{ template "retool.name" . }}
          protocol: TCP
{{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        {{- range $configFile := (keys .Values.files) }}
        - name: {{ template "retool.name" $ }}
          mountPath: "/usr/share/retool/config/{{ $configFile }}"
          subPath: {{ $configFile }}
        {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
{{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath }}
{{- end }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{- end }}
      volumes:
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
{{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
